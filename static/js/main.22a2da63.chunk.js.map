{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Components/ErrorBoundary.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","alt","src","CardList","CardComponent","Robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchField","target","value","robots","console","log","fetch","then","response","json","users","filterRobots","filter","robot","toLowerCase","includes","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"yOAceA,EAXF,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,GAAGC,EAAe,EAAfA,KAAKC,EAAU,EAAVA,MACtB,OACC,sBAAKC,UAAY,sDAAjB,UACC,qBAAKC,IAAK,WAAWC,IAAG,+BAA4BL,EAA5B,cACxB,gCACC,mCAAMC,EAAN,OACA,kCAAKC,YCSMI,EAdE,SAAC,GACjB,IACMC,EADP,EADmBC,OAEWC,KAAI,SAACC,EAAKC,GAEtC,OAAQ,cAAC,EAAD,CAAgBX,GAAMU,EAAKV,GAAIC,KAAQS,EAAKT,KAAMC,MAASQ,EAAKR,OAAnDS,MAEtB,OACC,8BACKJ,KCFQK,EARG,SAAC,GAA+B,EAA9BC,YAA+B,IAAlBC,EAAiB,EAAjBA,aAChC,OACC,qBAAKX,UAAY,MAAjB,SACA,uBAAOA,UAAY,mCAAmCY,KAAO,SAASC,YAAc,qBAAqBC,SAAYH,OCMxGI,EATA,SAACC,GAEf,OACC,qBAAKC,MAAS,CAACC,SAAS,SAAUC,OAAO,kBAAmBC,OAAO,SAAnE,SACEJ,EAAMK,YCmBKC,E,kDAtBd,WAAYN,GAAO,IAAD,8BACjB,cAAMA,IACDO,MAAQ,CACZC,UAAU,GAHM,E,qDAOlB,SAAkBC,EAAOC,GACxBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAI1B,WACC,OAAGG,KAAKJ,MAAMC,SACN,yDAEDG,KAAKX,MAAMK,a,GAjBQQ,aCqDbC,E,kDA7Cd,aAAc,IAAD,8BACZ,gBASDC,eAAgB,SAACC,GAEhB,EAAKJ,SAAS,CAACK,YAAaD,EAAME,OAAOC,SATzC,EAAKZ,MAAQ,CACZa,OAAQ,GACRH,YAAc,IAEfI,QAAQC,IAAI,oBAPA,E,qDAcb,WACC,IAAD,OACCC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAI,EAAKf,SAAS,CAACQ,OAAOO,OAErCN,QAAQC,IAAI,+C,oBAGb,WAAS,IAAD,OACDM,EAAejB,KAAKJ,MAAMa,OAAOS,QAAO,SAAAC,GAC7C,OAAOA,EAAMhD,KAAKiD,cAAcC,SAAS,EAAKzB,MAAMU,YAAYc,kBAGjE,OADAV,QAAQC,IAAI,UAGX,sBAAKtC,UAAY,KAAjB,UACC,iDACA,cAAC,EAAD,CAAWW,aAAgBgB,KAAKI,iBAChC,cAAC,EAAD,UACC,cAAC,EAAD,UACC,cAAC,EAAD,CAAU1B,OAAUuC,e,GApCRK,IAAMpB,WCGTqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCIdO,IAASC,OACK,cAAC,EAAD,IAAOC,SAASC,eAAe,SAI7CX,M","file":"static/js/main.22a2da63.chunk.js","sourcesContent":["import React from 'react';\r\nimport 'tachyons';\r\n\r\nconst Card = ({id,name,email}) =>{\r\n\treturn (\r\n\t\t<div className = 'tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t\t<img alt ='roboType' src = {`https://robohash.org/${id}?200x200`}/>\r\n\t\t\t<div>\r\n\t\t\t\t<h2> {name} </h2>\r\n\t\t\t\t<p> {email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t);\r\n};\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList = ({Robots}) =>\r\n{\r\n\tconst CardComponent = Robots.map((user,i) =>{\r\n\t\t// while using loop must include unique \"key\"\r\n\t\treturn (<Card key = {i} id = {user.id} name = {user.name} email = {user.email }/>)\r\n\t})\r\n\treturn(\r\n\t\t<div>\r\n\t\t    {CardComponent}\r\n\t\t    \r\n  \t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) =>{\r\n\treturn (\r\n\t\t<div className = 'pa2'>\r\n\t\t<input className = 'pa3 ba b--green bg-lightest-blue' type = 'search' placeholder = \"Search Your Robots\" onChange = {searchChange}/>\r\n\t\t</div>\r\n\t\t)\r\n\r\n}\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) =>\r\n{\r\n\treturn(\r\n\t\t<div style = {{overflow:'scroll', border:'5px solid black', height:'800px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\r\n\t\t)\r\n}\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidCatch(error, info){\r\n\t\tthis.setState({hasError: true})\r\n\r\n\t}\r\n\r\n\trender(){\r\n\t\tif(this.state.hasError){\r\n\t\t\treturn <h1> Oooops Thats not good </h1>\r\n\t\t}\r\n\t\treturn this.props.children\r\n\r\n\t}\r\n}\r\n\r\n\r\nexport default ErrorBoundary;"," import React from 'react';\r\nimport CardList from '../Components/CardList';\r\n// import { Robots } from '../Components/robots';\r\nimport SearchBox from '../Components/SearchBox';\r\nimport Scroll from '../Components/Scroll';\r\nimport ErrorBoundary from '../Components/ErrorBoundary';\r\n\r\n\r\n// class always has a render that returns something\r\nclass App extends React.Component{\r\n\tconstructor(){\r\n\t\tsuper(); // cause we are using the properties of Component: the parent\r\n\t\t// STATE: an object that describes our application\r\n\t\tthis.state = {\r\n\t\t\trobots: [],\r\n\t\t\tsearchField : ''\r\n\t\t}\r\n\t\tconsole.log('I am constructor');\r\n\t}\r\n\r\n\tonSearchChange= (event)=>{\r\n\t\t// not this.state.searchfield = ..... )(must always use setstate when there is change in state eg. the value inside searchfield)\r\n\t\tthis.setState({searchField: event.target.value});\r\n\t}\r\n\tcomponentDidMount()\r\n\t{\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(response =>response.json())\r\n\t\t.then(users => this.setState({robots:users}))\r\n\r\n\t\tconsole.log('Helllo what up. this is ComposeDidMount()')\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst filterRobots = this.state.robots.filter(robot =>{\r\n\t\t\treturn robot.name.toLowerCase().includes(this.state.searchField.toLowerCase());\r\n\t\t})\r\n\t\tconsole.log(\"Render\");\r\n\t\treturn (\r\n\r\n\t\t\t<div className = 'tc'>\r\n\t\t\t\t<h1 > Robot Friends </h1>\r\n\t\t\t\t<SearchBox searchChange = {this.onSearchChange} /> \r\n\t\t\t\t<Scroll>\r\n\t\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t\t<CardList Robots = {filterRobots} />\r\n\t\t\t\t\t</ErrorBoundary>\t\t\r\n\t\t\t\t</Scroll>\r\n\t\t\t</div>\r\n\t\t\t);\r\n\t}\r\n}\r\n\r\n\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App';\n\n\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\n\nReactDOM.render(\n              <App/>,document.getElementById('root'));\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}