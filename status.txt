"STATUS PAGE"
05/29/2021:
- Introduction to web development
- HTML
	- tags
		
		> i or em: italics
		> b or strong: bold
		> ol: ordered list
		> ul: unordered list
		> p: paragraphs
		> h: headers
		> title: webpage title
		> body: body of the website
		> li: list the objects
		> a href: anchor tag hypertext
		> div
		> span

	- self-closing tags: 
		> br: line break
		> hr: horizontal line
		> img: add an image object

	- forms:
		> input
		> select
		> types: 
			>> text
			>> password
			>> email
			>> date
			>> submit
			>> reset

05/30/2021:
-CSS
		-Cheatsheet
			> Reference:

				*https://www.w3schools.com/cssref/css_selectors.asp
				*https://css-tricks.com/almanac/

				Cascading Style Sheets at the most basic level it indicates that the order of CSS rules matter. 


			> Selectors: 

				.class 
				#id
				*
				element
				element, element : both the elements have the same properties declared inside {}
				element1 element2: select all elements2 inside element1
				element1 > element2: select all elemnent2 where the parent is element 1: 
							eg: div > p: selects all <p> elements where the parent is a <div> element
				element1 + element2:  select the first element2 right after element1 
							eg: div + p: selects the first(one) <p>element right after <div>
				:hover

				:last-child : select the last child
				:first-child: select the first child
						"usually used during classes and id"

				!important (not recommended)


				What seletors win out in the cascade depends on:
				-Specificity
				-Importance
				-Source Order

06/02/21:
-Advanced CSS
		> Critical Rendering Path:
			- a sequence of steps the browser goes through to convert the HTML, CSS And Javascript into pixels on the path. 

		> use of flexbox to create a website.
			-https://darekkay.com/flexbox-cheatsheet/
			- .container{
					display:flex;
					justify-content: align items horizontally
					align-items: align items vertically 
					flex-direction: defines the direction items are placed 
								in the container
								{notes:
								- if flex-direction is reverse: justify-content reverses(start is end and end is start)
								- if flex-direction is column:
								justify-content becomes vertical and align-items is horizontal

								}


				}

06/08/2021:
-Bootstrap: using somebody's else scripts and adding on top of it. 

06/12/2021:
	- startup page 
	- mailchimp

06/18/2021:
	- css flexbox vs grid vs bootstrap

	- CSS flexbox:
		> best for one-dimensional layout: either columns or rows

	- grid:
		> best for two-dimensional layout: both columns and rows


	CSS GRID :
	- 	-	display: grid
		-	grid-gap: 20px
		-	grid-template-columns: 1fr 2fr 1fr
			(means three columns with the size of middle column twice the size of remaining columns_)
			/*grid-template-columns:repeat(3,1fr) or 1fr 1fr 1fr*/\

		- 	grid-template-columns: auto (means fill in the content as required)

		-	grid-template-rows: 1fr 2fr
			(means size of second row double to that of first row: if more elements are there then the other rows generated will have default fr i.e 1fr) 

		- most common pattern:
			grid-template-columns: repeat(auto-fill, minmax(200px, 1fr))
			---> if our screen size is smaller than 200px, then our browser picks up the 1fr and displays the content. 

		- 	grid-column: 1/-1(till the end of the view port)*/
		- 	grid-row: span 2(span across 2 grids)
		- 	grid-column span 3 (span across 3 grids) 

		- 	justify:column-based
			align: row-based


06/20/2021:
	- Introduction to java script

	> function declaration:
		function newFunction(){

		}

	> function expression:
		var newFunction = function(){

		};


	> expression:
		1=3;
		var a =2;
		return false;

	>calling or invoking a function:
		alert();
		newFunction(arg1, arg2);
		function newFunction(param1, param2)
		{

		}

	> function vs method

		function thisIsAFunction(param1, param2)
		{

		}

		var obj = {
			thisIsAMethod : function(){

			}
		};

		// acessing functions vs methods
			thisIsAFunction();
			obj.thisIsAMethod();


06/21/2021:
	-------------Document Object Model(DOM) Manipulation ----------------------
	> used to modify the html and css on the website itself using javascript
	

	


